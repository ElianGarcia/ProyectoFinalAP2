@page "/ConsultaClientes"
@using ProyectoFinalAp2.Controllers
@using ProyectoFinalAp2.Models

@inject IToastService toast

<div class="card">

    <div class="card-header  alert-info">
        <div class="text-center">
            <img src="Resources/favicon.ico" height="90" />
        </div>

        <div class="text-center">
            <h3 class="text-center text-black-50">Consulta de Facturas</h3>
        </div>
    </div>

    <div class="card-body">
        <div class="form-row">
            <div class="form-group col">
                <br />
                <input class="align-self-center" type="checkbox" @bind="BuscarFecha" id="defaultCheck1">
                <label for="DesdeFecha">Filtrar por fecha</label>
            </div>

            @if (BuscarFecha)
            {
                <div class="form-group col">
                    <label for="DesdeFecha">Desde: </label>
                    <input id="DesdeFecha" type="date" @bind="DesdeFecha" class="form-control" input />
                </div>

                <div class="form-group col">
                    <label for="HastaFechaInput" class="mr-3">Hasta:</label>
                    <input type="date" Id="HastaFechaInput" @bind="HastaFecha" class="form-control" />
                </div>
            }

            <div class="form-group col">
                <label for="filtro">Filtro: </label>
                <select class="form-control" @bind="filtro">
                    <option value="" disabled selected>Seleccione un filtro</option>
                    <option value="1">TODO</option>
                    <option value="2">ID</option>
                    <option value="3">NOMBRE</option>
                    <option value="4">RNC</option>
                    <option value="5">DIRECCION</option>
                    <option value="6">TELEFONO</option>
                    <option value="7">EMAIL</option>
                </select>
            </div>

            <div class="form-group col">
                <label for="criterio"> Criterio: </label>
                <input type="text" class="form-control" @bind="criterio" />
            </div>

            <div class="form-group col mt-1">
                <br />
                <button type="button" class="btn btn-outline-success" @onclick="Buscar">Buscar</button>
            </div>
        </div>

        <table class="table mb-3">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>NOMBRE</th>
                    <th>RNC</th>
                    <th>DIRECCION</th>
                    <th>TELEFONO</th>
                    <th>EMAIL</th>
                </tr>
            </thead>
            <tbody class="table-striped">
                @foreach (var item in lista)
                {
                    <tr>
                        <td>@item.ClienteId</td>
                        <td>@item.Nombre</td>
                        <td>@item.RNC</td>
                        <td>@item.Direccion</td>
                        <td>@item.Telefono</td>
                        <td>@item.Email</td>
                        <td><a class="btn btn-outline-info" href="Clientes/@item.ClienteId">Ver</a></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>


    <div class="card-footer">
        <div class="form-group">
            <label>Cantidad de clientes</label>
            <input type="number" @bind="cantidadCliente" class="form-control" readonly />
        </div>
    </div>
</div>

@code {

    List<Clientes> lista = new List<Clientes>();
    public bool BuscarFecha { get; set; }
    public DateTime DesdeFecha { get; set; }
    public DateTime HastaFecha { get; set; }
    public int filtro;
    public string criterio = string.Empty;
    private int cantidadCliente = 0;

    protected override void OnInitialized()
    {
        DesdeFecha = DateTime.Now;
        HastaFecha = DateTime.Now;
    }

    private void Buscar()
    {
        try
        {
            if (filtro == 0)
            {
                toast.ShowWarning("Debe seleccionar un Filtro", "Aviso");
            }
            else
            {
                switch (filtro)
                {
                    case 1: //Todos
                        this.lista = ClientesBLL.GetList(c => true);
                        break;
                    case 2: //Id
                        int ID = GetId();
                        this.lista = ClientesBLL.GetList(c =>c.ClienteId == ID);
                        break;
                    case 3: //nombre
                        this.lista = ClientesBLL.GetList(f => f.Nombre == criterio);
                        break;
                    case 4: //rnc
                        this.lista = ClientesBLL.GetList(f => f.RNC == criterio);
                        break;
                    case 5: //direccion
                        this.lista = ClientesBLL.GetList(f => f.Direccion == criterio);
                        break;
                    case 6: //telefono
                        this.lista = ClientesBLL.GetList(f => f.Telefono == criterio);
                        break;
                    case 7: //email
                        this.lista = ClientesBLL.GetList(f => f.Email == criterio);
                        break;
                }
                if (BuscarFecha == true)
                {
                    lista = lista.Where(f => f.Fecha.Date >= DesdeFecha.Date && f.Fecha.Date <= HastaFecha.Date).ToList();
                }
                if (lista == null)
                {
                    toast.ShowInfo("Vacio", "No se han encontrado productos, revise su criterio de busqueda");
                }

                CantidadCliente();
            }
        }
        catch (Exception)
        {

            throw;
        }
    }

    private int GetId()
    {
        int resultado = 0;

        try
        {
            resultado = Convert.ToInt32(criterio);
            return resultado;
        }
        catch (Exception)
        {

            toast.ShowError("El ID del cliente debe ser numerico..");
        }

        return resultado;
    }

    private decimal GetTotal()
    {
        decimal total = 0;

        try
        {
            total = Convert.ToDecimal(criterio);
            return total;
        }
        catch (Exception)
        {

            toast.ShowError("El total debe ser numerico..");
        }

        return total;
    }

    private void CantidadCliente()
    {
        cantidadCliente = this.lista.Count();
    }

}