@page "/Consultas/Usuarios"

@inject IToastService toast

@using ProyectoFinalAp2.Models;
@using ProyectoFinalAp2.Controllers;

<h3>Consulta de Productos</h3>

<EditForm Model="lista" OnValidSubmit="Imprimir">
    <DataAnnotationsValidator />
    <div class="input-group">
        <input class="ml-3" type="checkbox" @bind-value="BuscarFecha" id="defaultCheck1"> Filtrar por Fecha
        &emsp;
        <label for="DesdeFecha">Desde: </label>
        <input id="DesdeFecha" type="date" @bind-value="DesdeFecha" class="form-control" input />

        <label for="HastaFechaInput">&nbsp;&nbsp;Hasta: </label>
        <input type="date" Id="HastaFechaInput" @bind-value="HastaFecha" class="form-control" />
    </div><br />

    <div class="input-group">
        <label for="filtro">Filtro: </label>
        <select class="form-control" @bind="Filtro">
            <option value="" disabled selected>Seleccione un filtro</option>
            <option value="Todo">Todo</option>
            <option value="Id">ID</option>
            <option value="Descripcion">Nombre</option>
            <option value="Descripcion">Nombre de Usuario</option>
        </select>

        <label for="criterio">&nbsp;&nbsp; Criterio: </label>
        <input type="search" class="form-control" @bind-value="Criterio" />

        <button type="button" class="btn btn-outline-success" @onclick="Buscar">Buscar</button>
    </div>
    <br />

    <table class="table">
        <thead class="thead-light">
            <tr>
                <th>ID</th>
                <th>Nombre</th>
                <th>Nombre de Usuario</th>
                <th>Fecha de Ingreso</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in lista)
            {
                <tr>
                    <td>@item.UsuarioId</td>
                    <td>@item.Nombres</td>
                    <td>@item.NombreUsuario</td>
                    <td>@item.FechaIngreso</td>
                    <td><a class="btn btn-outline-info" href="Articulos/@item.UsuarioId">Ver</a></td>
                </tr>
            }
        </tbody>
    </table>
</EditForm>

@code {

    private List<Usuarios> lista { get; set; }

    private string Filtro { get; set; }
    private string Criterio { get; set; }
    public string mensaje;
    public bool BuscarFecha { get; set; }
    public DateTime DesdeFecha { get; set; }
    public DateTime HastaFecha { get; set; }


    protected override void OnInitialized()
    {
        lista = new List<Usuarios>();
        DesdeFecha = DateTime.Now;
        HastaFecha = DateTime.Now;
    }

    private void Imprimir()
    {

    }

    private void Buscar()
    {
        try
        {
            if (Filtro == null)
            {
                toast.ShowWarning("Debe seleccionar un Filtro", "Aviso");
            }
            else
            {
                lista = UsuariosBLL.GetList(a => true);

                if (lista.Count == 0)
                {
                    toast.ShowWarning("No hay Usuarios registrados", "Aviso");
                }
                else
                {
                    mensaje = "";
                    switch (Filtro)
                    {
                        case "Todo":
                            lista = UsuariosBLL.GetList(e => true);
                            break;
                        case "ID":
                            lista = UsuariosBLL.GetList(e => e.UsuarioId == Convert.ToInt32(Criterio));
                            break;
                        case "Nombre":
                            lista = UsuariosBLL.GetList(e => e.Nombres == Criterio);
                            break;
                        case "Nombre De Usuario":
                            lista = UsuariosBLL.GetList(e => e.NombreUsuario == Criterio);
                            break;
                    }
                    if (BuscarFecha == true)
                    {
                        lista = UsuariosBLL.GetList(p => p.FechaIngreso >= DesdeFecha.Date && p.FechaIngreso <= HastaFecha.Date);
                    }
                }
            }
        }
        catch (Exception)
        {
            throw;
        }
    }
}