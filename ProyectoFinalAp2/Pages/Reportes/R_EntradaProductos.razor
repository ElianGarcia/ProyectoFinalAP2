@page "/Reportes/EntradaProductos"
@using ProyectoFinalAp2.Models;
@using ProyectoFinalAp2.Controllers;
@using ProyectoFinalAp2.Data;
@using System.IO;
@inject ExportService exportService
@inject Microsoft.JSInterop.IJSRuntime JS

<div class="card">
    <div class="card-header alert-info">
        <div class="text-center">
            <img src="Resources/favicon.ico" height="90" />
        </div>

        <div class="text-center">
            <h3 class="text-center text-black-50">ButterSoft</h3>
            <h3 class="text-center text-black-50">Reporte Entrada de Productos</h3>
        </div>

        <div class="float-right mb-4">
            <label for="FECHA">Fecha de impresión: @Fecha </label>
        </div>
    </div>

    <div class="card-body">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th> ID </th>
                    <th> Fecha </th>
                    <th> Cantidad Total </th>
                </tr>
            </thead>
            <tbody class="table-striped">
                @foreach (var item in Lista)
                {
                    <tr>
                        <td>@item.EntradaProductoId</td>
                        <td>@item.Fecha</td>
                        <td>@item.CantidadTotal</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="card-footer">
        <label for="GANANCIA">Cantidad Total</label>
        <input @bind="@Total" class="form-control" step="00.2" readonly />
    </div>

    <button class="btn btn-primary" @onclick="@ExportToPdf">Exportar a PDF</button>
</div>


@code {
    List<EntradaProductos> Lista = new List<EntradaProductos>();
    String Fecha;
    decimal Total = 0;

    protected override void OnInitialized()
    {
        Fecha = DateTime.Now.ToShortDateString();
        Lista = EntradaProductoBLL.GetList(e => true);
        CalcularTotal();
    }

    private decimal CalcularTotal()
    {
        Total = 0;

        foreach (var item in Lista)
        {
            Total += item.CantidadTotal;
        }
        return Total;
    }

    protected async Task ExportToPdf()
    {
        using (MemoryStream excelStream = ExportService.CreatePdfEntradaProductos(Lista, Fecha))
        {
            await JS.SaveAs("EntradaProductos.pdf", excelStream.ToArray());
        }
    }
}
