@page "/Reportes/Usuarios"
@using ProyectoFinalAp2.Models;
@using ProyectoFinalAp2.Controllers;
@using ProyectoFinalAp2.Data;
@using System.IO;
@inject ExportService exportService
@inject Microsoft.JSInterop.IJSRuntime JS

<div class="card">
    <div class="card-header alert-info">
        <div class="text-center">
            <img src="Resources/favicon.ico" height="90" />
        </div>

        <div class="text-center">
            <h3 class="text-center text-black-50">ButterSoft</h3>
            <h3 class="text-center text-black-50">Reporte de Usuarios</h3>
        </div>

        <div class="float-right mb-4">
            <label for="FECHA">Fecha de impresión: @Fecha </label>
        </div>
    </div>

    <div class="card-body">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th> ID de Usuario </th>
                    <th> Nombres </th>
                    <th> Nombre de Usuario </th>
                    <th> Fecha de Ingreso </th>
                </tr>
            </thead>
            <tbody class="table-striped">
                @foreach (var usuario in @Lista)
                {
                    <tr>
                        <td>@usuario.UsuarioId</td>
                        <td>@usuario.Nombres</td>
                        <td>@usuario.NombreUsuario</td>
                        <td>@usuario.FechaIngreso</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="card-footer">
        <label for="GANANCIA">Cantidad de usuarios registrados</label>
        <input @bind="@Cantidad" class="form-control" readonly />
    </div>

    <button class="btn btn-primary" @onclick="@ExportToPdf">Exportar a PDF</button>
</div>


@code {
    List<Usuarios> Lista = new List<Usuarios>();
    List<AuxUsuario> auxLista;
    String Fecha;
    int Cantidad;

    protected override void OnInitialized()
    {
        Fecha = DateTime.Now.ToString("dd/MM/yyyy");
        Lista = UsuariosBLL.GetList(e => true);
        CalcularTotal();
        CargarListaAux();
    }

    private int CalcularTotal()
    {
        Cantidad = 0;

        foreach (var usuario in Lista)
        {
            Cantidad += 1;
        }
        return Cantidad;
    }

    private void CargarListaAux()
    {
        try
        {
            this.auxLista = new List<AuxUsuario>();
            if (Lista.Count()!=0)
            {
                foreach (var item in Lista)
                {
                    this.auxLista.Add(new AuxUsuario
                    {
                        ID = item.UsuarioId,
                        Nombres = item.Nombres,
                        Nombre_Usuario = item.NombreUsuario,
                        Fecha_Ingreso = item.FechaIngreso
                    });
                }
            }
        }
        catch (Exception)
        {

            throw;
        }

    }

    protected async Task ExportToPdf()
    {
        if(auxLista.Count()==0 || auxLista == null)
        {
            await JS.Confirmar("top-center", "info", "Aviso", "No hay anda para exportar.", false, 2000);
        }
        else
        {
            using (MemoryStream excelStream = ExportService.CreatePdfUsuarios(auxLista, Fecha, Cantidad))
            {
                await JS.SaveAs("Usuarios.pdf", excelStream.ToArray());
            }
        }

    }
}
