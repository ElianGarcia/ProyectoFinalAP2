@page "/Reportes/Reorden"
@using ProyectoFinalAp2.Models;
@using ProyectoFinalAp2.Controllers;
@using System.IO;
@using ProyectoFinalAp2.Data;

@inject ExportService exportService
@inject Microsoft.JSInterop.IJSRuntime JS

<div class="card">
    <div class="card-header alert-info">
        <div class="text-center">
            <img src="Resources/favicon.ico" height="90" />
        </div>

        <div class="text-center">
            <h3 class="text-center text-black-50">ButterSoft</h3>
            <h3 class="text-center text-black-50">Reporte de Reorden</h3>
        </div>

        <div class="float-right mb-4">
            <label for="FECHA">Fecha de impresión: @Fecha </label>
        </div>
    </div>

    <div class="card-body">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th> ID de Producto </th>
                    <th> Descripción </th>
                    <th> Reorden </th>
                    <th> Cantidad Actual </th>
                </tr>
            </thead>
            <tbody class="table-striped">
                @foreach (var producto in auxLista)
                {
                    <tr>
                        <td>@producto.ProductoId</td>
                        <td>@producto.Descripcion</td>
                        <td>@producto.Reorden</td>
                        <td>@producto.Cantidad</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="card-footer">
        <label for="GANANCIA">Cantidad Total</label>
        <input @bind="@Total" class="form-control" readonly />
    </div>

    <button class="btn btn-primary" @onclick="@ExportToPdf">Exportar a PDF</button>
</div>


@code {
    List<Productos> Lista = new List<Productos>();
    List<Productos> auxLista = new List<Productos>();
    String Fecha;
    int Total = 0;

    protected override void OnInitialized()
    {
        Fecha = DateTime.Now.ToString("dd/MM/yyyy");
        Reorden();
        CalcularTotal();
    }

    private void Reorden()
    {
        Lista = ProductosBLL.GetList(e => true);

        foreach (var producto in Lista)
        {
            if (producto.Cantidad <= producto.Reorden)
            {
                auxLista.Add(producto);
            }
        }
    }

    private decimal CalcularTotal()
    {
        Total = 0;

        foreach (var producto in Lista)
        {
            Total += producto.Cantidad;
        }
        return Total;
    }

    protected async Task ExportToPdf()
    {
        if(Lista.Count()==0 || Lista == null)
        {
            await JS.Confirmar("top-center", "info", "Aviso", "No hay anda para exportar.", false, 2000);
        }
        else
        {
            using (MemoryStream excelStream = ExportService.CreatePdfReorden(Lista, Fecha, Total))
            {
                await JS.SaveAs("Reorden.pdf", excelStream.ToArray());
            }
        }

    }
}